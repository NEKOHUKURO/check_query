SELECT *  FROM countries WHERE group_name = 'C';
SELECT *  FROM countries WHERE group_name <> 'C';
SELECT *  FROM players WHERE birth <= '1976-1-13';
SELECT *  FROM players WHERE height < 170;
SELECT *  FROM countries WHERE ranking BETWEEN 36 AND 56;
SELECT *  FROM players WHERE position IN ('GK', 'DF', 'MF');
SELECT *  FROM goals WHERE player_id IS NULL ;
SELECT *  FROM goals WHERE player_id IS NOT NULL;
SELECT * FROM players WHERE name LIKE '%ニョ';
SELECT * FROM players WHERE name LIKE '%ニョ%';
SELECT *  FROM countries WHERE NOT group_name = 'A';
SELECT * FROM players WHERE weight / POW(height / 100, 2) >= 20 AND weight / POW(height / 100, 2) < 21 ;
SELECT * FROM players WHERE height < 165 OR weight < 60;
SELECT * FROM players WHERE (position = 'FW' OR position = 'MF') AND height < 170;
SELECT * FROM players WHERE position = 'FW' OR position = 'MF' AND height < 170;
SELECT p1.kickoff, c1.name AS my_country, c2.name AS enemy_country,      c1.ranking AS my_ranking, c2.ranking AS enemy_ranking, 	(SELECT COUNT(g1.id) FROM goals g1 WHERE p1.id = g1.pairing_id) AS my_goals,     ( 		SELECT COUNT(g2.id)  		FROM goals g2  		LEFT JOIN pairings p2 ON p2.id = g2.pairing_id 		WHERE p2.my_country_id = p1.enemy_country_id AND p2.enemy_country_id = p1.my_country_id     ) AS enemy_goals FROM pairings p1 LEFT JOIN countries c1 ON c1.id = p1.my_country_id LEFT JOIN countries c2 ON c2.id = p1.enemy_country_id WHERE c1.group_name = 'C' AND c2.group_name = 'C' ORDER BY p1.kickoff, c1.ranking;
SELECT group_name AS グループ, MIN(ranking) AS ランキング最上位, MAX(ranking) AS ランキング最下位 FROM countries GROUP BY group_name;
SELECT AVG(height) AS 平均身長, AVG(weight) AS 平均体重 FROM players WHERE position = 'GK';
SELECT c.name AS 国名, AVG(p.height) AS 平均身長 FROM countries c JOIN players p ON p.country_id = c.id GROUP BY c.id, c.name ORDER BY AVG(p.height) DESC;
SELECT c.name AS 国名, AVG(p.height) AS 平均身長 FROM countries c JOIN players p ON p.country_id = c.id GROUP BY c.id ORDER BY AVG(p.height) DESC;
SELECT (SELECT c.name FROM countries c WHERE p.country_id = c.id) AS 国名, AVG(p.height) AS 平均身長 FROM players p GROUP BY p.country_id ORDER BY AVG(p.height) DESC;
SELECT kickoff AS キックオフ日時, c1.name AS 国名1, c2.name AS 国名2 FROM pairings p LEFT JOIN countries c1 ON p.my_country_id = c1.id LEFT JOIN countries c2 ON p.enemy_country_id = c2.id ORDER BY kickoff;
SELECT p.name AS 名前, p.position AS ポジション, p.club AS 所属クラブ,  	(SELECT COUNT(id) FROM goals g WHERE g.player_id = p.id) AS ゴール数 FROM players p ORDER BY ゴール数 DESC;
SELECT p.name AS 名前, p.position AS ポジション, p.club AS 所属クラブ,  	COUNT(g.id) AS ゴール数 FROM players p LEFT JOIN goals g ON g.player_id = p.id GROUP BY p.id, p.name, p.position, p.club ORDER BY ゴール数 DESC;
SELECT p.position AS ポジション, COUNT(g.id) AS ゴール数 FROM players p LEFT JOIN goals g ON g.player_id = p.id GROUP BY p.position ORDER BY ゴール数 DESC;
SELECT birth, TIMESTAMPDIFF(YEAR, birth, '2014-06-13') AS age, name, position FROM players ORDER BY age DESC;
SELECT COUNT(g.goal_time) FROM goals  g WHERE g.player_id IS NULL;
SELECT c.group_name, COUNT(g.id) FROM goals g LEFT JOIN pairings p ON p.id = g.pairing_id LEFT JOIN countries c ON p.my_country_id = c.id  WHERE p.kickoff BETWEEN '2014-06-13 0:00:00' AND '2014-06-27 23:59:59' GROUP BY c.group_name;
SELECT goal_time FROM goals WHERE pairing_id = 103;
SELECT c.name, COUNT(g.goal_time) FROM goals g LEFT JOIN pairings p ON p.id = g.pairing_id LEFT JOIN countries c ON p.my_country_id = c.id  WHERE p.id = 103 OR p.id = 39 GROUP BY c.name;
SELECT p1.kickoff, c1.name AS my_country, c2.name AS enemy_country,     c1.ranking AS my_ranking, c2.ranking AS enemy_ranking,     COUNT(g1.id) AS my_goals FROM pairings p1 LEFT JOIN countries c1 ON c1.id = p1.my_country_id LEFT JOIN countries c2 ON c2.id = p1.enemy_country_id LEFT JOIN goals g1 ON p1.id = g1.pairing_id WHERE c1.group_name = 'C' AND c2.group_name = 'C' GROUP BY p1.kickoff, c1.name, c2.name, c1.ranking, c2.ranking ORDER BY p1.kickoff, c1.ranking;
SELECT p1.kickoff, c1.name AS my_country, c2.name AS enemy_country,     c1.ranking AS my_ranking, c2.ranking AS enemy_ranking,     (SELECT COUNT(g1.id) FROM goals g1 WHERE p1.id = g1.pairing_id) AS my_goals FROM pairings p1 LEFT JOIN countries c1 ON c1.id = p1.my_country_id LEFT JOIN countries c2 ON c2.id = p1.enemy_country_id WHERE c1.group_name = 'C' AND c2.group_name = 'C' ORDER BY p1.kickoff, c1.ranking;
SELECT p.kickoff, ADDTIME(p.kickoff, '-12:00:00') AS kickoff_jp FROM pairings p WHERE p.my_country_id = 1 AND p.enemy_country_id = 4;
SELECT p.kickoff, SUBTIME(p.kickoff, '12:00:00') AS kickoff_jp FROM pairings p WHERE p.my_country_id = 1 AND p.enemy_country_id = 4;
SELECT p.kickoff, DATE_ADD(p.kickoff, INTERVAL '-12' HOUR) AS kickoff_jp FROM pairings p WHERE p.my_country_id = 1 AND p.enemy_country_id = 4;
SELECT p.kickoff, DATE_SUB(p.kickoff, INTERVAL '12' HOUR) AS kickoff_jp FROM pairings p WHERE p.my_country_id = 1 AND p.enemy_country_id = 4;
SELECT p.kickoff, ADDDATE(p.kickoff, INTERVAL '-12' HOUR) AS kickoff_jp FROM pairings p WHERE p.my_country_id = 1 AND p.enemy_country_id = 4;
SELECT p.kickoff, SUBDATE(p.kickoff, INTERVAL '12' HOUR) AS kickoff_jp FROM pairings p WHERE p.my_country_id = 1 AND p.enemy_country_id = 4;
SELECT TIMESTAMPDIFF(YEAR, birth, '2014-06-13') AS age, COUNT(id) AS player_count FROM players  GROUP BY age;
SELECT TRUNCATE(TIMESTAMPDIFF(YEAR, birth, '2014-06-13'), -1) AS age, COUNT(id) AS player_count FROM players  GROUP BY age;
SELECT FLOOR(TIMESTAMPDIFF(YEAR, birth, '2014-06-13') / 5) * 5   AS age, COUNT(id) AS player_count FROM players  GROUP BY age;
SELECT FLOOR(TIMESTAMPDIFF(YEAR, birth, '2014-06-13') / 5) * 5   AS age, position, COUNT(id) AS player_count, AVG(height), AVG(weight) FROM players  GROUP BY age, position ORDER BY age, position;
SELECT name, height, weight FROM players ORDER BY height DESC LIMIT 5;
SELECT name, height, weight FROM players ORDER BY height DESC LIMIT 5, 15;
SELECT uniform_num, name, club FROM players;
SELECT DISTINCT position FROM players;
SELECT name, club, height + weight FROM players;
SELECT CONCAT(name, '選手のポジションは\'', position, '\'です') FROM players;
SELECT name, club, height + weight AS 体力指数 FROM players;
SELECT *  FROM countries  ORDER BY ranking;
SELECT *  FROM players  ORDER BY birth DESC;
SELECT * FROM players ORDER BY height DESC, weight DESC;
SELECT id, country_id, uniform_num, SUBSTRING(position, 1, 1), name FROM players;
SELECT name, LENGTH(name)  FROM countries ORDER BY LENGTH(name) DESC;
SELECT name, DATE_FORMAT(birth, '%Y年%m月%d日') AS birthday FROM players;
SELECT IFNULL(player_id, 9999) AS player_id, goal_time FROM goals;
SELECT      CASE WHEN player_id IS NULL THEN 9999 ELSE player_id END AS player_id,      goal_time FROM goals;
SELECT AVG(height) AS '平均身長', AVG(weight) AS '平均体重' FROM players;
SELECT COUNT(id) AS '日本のゴール数' FROM goals WHERE 714 <= player_id AND player_id <= 736;
SELECT COUNT(*) AS '日本のゴール数' FROM goals WHERE 714 <= player_id AND player_id <= 736;
SELECT COUNT(player_id) AS 'オウンゴール以外のゴール数' FROM goals;
SELECT MAX(height) AS '最大身長', MAX(weight) AS '最大体重' FROM players;
SELECT MIN(ranking) AS AグループのFIFAランク最上位 FROM countries WHERE group_name = 'A';
SELECT SUM(ranking) AS CグループのFIFAランクの合計値 FROM countries WHERE group_name = 'C';
SELECT c.name, p.name, p.uniform_num FROM players p JOIN countries c ON c.id = p.country_id;
SELECT c.name, p.name, g.goal_time FROM goals g JOIN players p ON g.player_id = p.id JOIN countries c ON p.country_id = c.id;
SELECT g.goal_time, p.uniform_num, p.position, p.name FROM goals g LEFT JOIN players p ON g.player_id = p.id;
SELECT g.goal_time, p.uniform_num, p.position, p.name FROM players p  RIGHT JOIN goals g ON g.player_id = p.id;
SELECT c.name AS country_name, g.goal_time, p.position, p.name AS player_name FROM goals g LEFT JOIN players p ON g.player_id = p.id LEFT JOIN countries c ON p.country_id = c.id;
SELECT p.kickoff, mc.name AS my_country, ec.name AS enemy_country FROM pairings p JOIN countries mc ON mc.id = my_country_id JOIN countries ec on ec.id = enemy_country_id;
SELECT g.id, g.goal_time, (SELECT p.name FROM players p WHERE p.id = g.player_id) AS player_name FROM goals g WHERE g.player_id IS NOT NULL;
SELECT g.id, g.goal_time, p.name FROM goals g JOIN players p ON p.id = g.player_id;
SELECT p1.position, p1.最大身長, p2.name, p2.club FROM ( 	SELECT position, MAX(height) AS 最大身長 	FROM players 	GROUP BY position     ) p1 LEFT JOIN players p2 ON p1.最大身長 = p2.height AND p1.position = p2.position;
SELECT position, MAX(height) AS 最大身長, name, club FROM players GROUP BY position;
SELECT p1.position, MAX(p1.height) AS 最大身長,  	( 	SELECT p2.name 	FROM players p2 	WHERE MAX(p1.height) = p2.height AND p1.position = p2.position 	) AS 名前 FROM players p1 GROUP BY p1.position;
SELECT uniform_num, position, name, height FROM players WHERE height < (SELECT AVG(height) FROM players);
SELECT group_name, MAX(ranking), MIN(ranking) FROM countries GROUP BY group_name HAVING MAX(ranking) -  MIN(ranking) > 50;
SELECT '1980' AS '誕生年', COUNT(id) FROM players WHERE birth BETWEEN '1980-1-1' AND '1980-12-31' UNION SELECT '1981', COUNT(id) FROM players WHERE birth BETWEEN '1981-1-1' AND '1981-12-31';
SELECT id, position, name, height, weight FROM players WHERE height > 195 UNION ALL SELECT id, position, name, height, weight FROM players WHERE weight > 95 ORDER BY id;
SELECT * FROM teachers;
SELECT id,name,age FROM teachers as T1 WHERE age > (SELECT MIN(age) FROM teachers as T2 WHERE T1.addr = T2.addr);
CREATE VIEW teachers_view AS 　SELECT teacher_id,name, class_id FROM teachers;
SELECT * FROM teachers_view;
ALTER VIEW teachers_view AS SELECT teacher_id,name,class_id,age FROM teachers;
CREATE OR REPLACE VIEW teachers_view AS SELECT name,address,age FROM teachers;
UPDATE teachers_view SET name = 'シュウタ' WHERE teacher_id = 1;
DROP VIEW teachers_view;
DROP VIEW class_view;
DROP VIEW teachers_view;
DROP VIEW IF EXISTS teachers_view;
SELECT * FROM cars WHERE price = (SELECT MAX(price) FROM cars);
SELECT CustomerName, City, Country FROM Customers;
SELECT * FROM Customers;
SELECT DISTINCT Country FROM Customers;
SELECT COUNT(DISTINCT Country) FROM Customers;
SELECT * FROM Customers WHERE Country='Mexico';
SELECT * FROM Customers WHERE CustomerID=1;
SELECT * FROM Customers WHERE Country='Germany' AND City='Berlin';
SELECT * FROM Customers WHERE City='Berlin' OR City='Stuttgart';
SELECT * FROM Customers WHERE Country='Germany' OR Country='Spain';
SELECT * FROM Customers WHERE NOT Country='Germany';
SELECT * FROM Customers WHERE Country='Germany' AND (City='Berlin' OR City='Stuttgart');
SELECT * FROM Customers WHERE NOT Country='Germany' AND NOT Country='USA';
SELECT * FROM Customers ORDER BY Country;
SELECT * FROM Customers ORDER BY Country DESC;
SELECT * FROM Customers ORDER BY Country, CustomerName;
SELECT * FROM Customers ORDER BY Country ASC, CustomerName DESC;
SELECT CustomerName, ContactName, Address FROM Customers WHERE Address IS NULL;
SELECT CustomerName, ContactName, Address FROM Customers WHERE Address IS NOT NULL;
SELECT * FROM Customers LIMIT 3;
SELECT * FROM Customers WHERE Country='Germany' LIMIT 3;
SELECT MIN(Price) AS SmallestPrice FROM Products;
SELECT MAX(Price) AS LargestPrice FROM Products;
SELECT COUNT(ProductID) FROM Products;
SELECT AVG(Price) FROM Products;
SELECT SUM(Quantity) FROM OrderDetails;
SELECT * FROM Customers WHERE CustomerName LIKE 'a%';
SELECT * FROM Customers WHERE CustomerName LIKE '%a';
SELECT * FROM Customers WHERE CustomerName LIKE '%or%'
SELECT * FROM Customers WHERE CustomerName LIKE '_r%';
SELECT * FROM Customers WHERE ContactName LIKE 'a%o';
SELECT * FROM Customers WHERE CustomerName LIKE 'a__%';
SELECT * FROM Customers WHERE CustomerName NOT LIKE 'a%';
SELECT * FROM Customers WHERE City LIKE 'ber%';
SELECT * FROM Customers WHERE City LIKE '_ondon';
SELECT * FROM Customers WHERE Country IN ('Germany', 'France', 'UK');
SELECT * FROM Customers WHERE Country NOT IN ('Germany', 'France', 'UK');
SELECT * FROM Customers WHERE Country IN (SELECT Country FROM Suppliers);
SELECT * FROM Products WHERE Price BETWEEN 10 AND 20;
SELECT * FROM Products WHERE Price NOT BETWEEN 10 AND 20;
SELECT * FROM Products WHERE Price BETWEEN 10 AND 20 AND CategoryID NOT IN (1,2,3);
SELECT * FROM Products WHERE ProductName BETWEEN 'Carnarvon Tigers' AND 'Mozzarella di Giovanni' ORDER BY ProductName;
SELECT * FROM Products WHERE ProductName NOT BETWEEN 'Carnarvon Tigers' AND 'Mozzarella di Giovanni' ORDER BY ProductName;
SELECT * FROM Orders WHERE OrderDate BETWEEN '1996-07-01' AND '1996-07-31';
SELECT CustomerID AS ID, CustomerName AS Customer FROM Customers;
SELECT CustomerName AS Customer, ContactName AS ContactPerson FROM Customers;
SELECT CustomerName, CONCAT_WS(', ', Address, PostalCode, City, Country) AS Address FROM Customers;
SELECT o.OrderID, o.OrderDate, c.CustomerName FROM Customers AS c, Orders AS o WHERE c.CustomerName='Around the Horn' AND c.CustomerID=o.CustomerID;
SELECT Orders.OrderID, Customers.CustomerName FROM Orders INNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID;
SELECT Orders.OrderID, Customers.CustomerName, Shippers.ShipperName FROM ((Orders INNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID) INNER JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID);
SELECT Customers.CustomerName, Orders.OrderID FROM Customers LEFT JOIN Orders ON Customers.CustomerID=Orders.CustomerID ORDER BY Customers.CustomerName;
SELECT Orders.OrderID, Employees.LastName, Employees.FirstName FROM Orders RIGHT JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID ORDER BY Orders.OrderID;
SELECT Customers.CustomerName, Orders.OrderID FROM Customers CROSS JOIN Orders;
SELECT A.CustomerName AS CustomerName1, B.CustomerName AS CustomerName2, A.City FROM Customers A, Customers B WHERE A.CustomerID <> B.CustomerID AND A.City = B.City ORDER BY A.City;
SELECT City FROM Customers UNION SELECT City FROM Suppliers ORDER BY City;
SELECT City FROM Customers UNION ALL SELECT City FROM Suppliers ORDER BY City;
SELECT City, Country FROM Customers WHERE Country='Germany' UNION SELECT City, Country FROM Suppliers WHERE Country='Germany' ORDER BY City;
SELECT City, Country FROM Customers WHERE Country='Germany' UNION ALL SELECT City, Country FROM Suppliers WHERE Country='Germany' ORDER BY City;
SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country;
SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country ORDER BY COUNT(CustomerID) DESC;
SELECT Shippers.ShipperName,COUNT(Orders.OrderID) AS NumberOfOrders FROM Orders LEFT JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID GROUP BY ShipperName;
SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country HAVING COUNT(CustomerID) > 5;
SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country HAVING COUNT(CustomerID) > 5 ORDER BY COUNT(CustomerID) DESC;
SELECT Employees.LastName, COUNT(Orders.OrderID) AS NumberOfOrders FROM Orders INNER JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID WHERE LastName = 'Davolio' OR LastName = 'Fuller' GROUP BY LastName HAVING COUNT(Orders.OrderID) > 25;
SELECT SupplierName FROM Suppliers WHERE EXISTS (SELECT ProductName FROM Products WHERE Products.SupplierID = Suppliers.supplierID AND Price < 20);
SELECT SupplierName FROM Suppliers WHERE EXISTS (SELECT ProductName FROM Products WHERE Products.SupplierID = Suppliers.supplierID AND Price = 22);
SELECT ProductName FROM Products WHERE ProductID = ANY (SELECT ProductID FROM OrderDetails WHERE Quantity = 10);
SELECT ProductName FROM Products WHERE ProductID = ANY (SELECT ProductID FROM OrderDetails WHERE Quantity > 99);
SELECT ProductName FROM Products WHERE ProductID = ANY (SELECT ProductID FROM OrderDetails WHERE Quantity > 1000);
SELECT ALL ProductName FROM Products WHERE TRUE;
SELECT ProductName FROM Products WHERE ProductID = ALL (SELECT ProductID FROM OrderDetails WHERE Quantity = 10);
SELECT OrderID, Quantity, CASE WHEN Quantity > 30 THEN 'The quantity is greater than 30' WHEN Quantity = 30 THEN 'The quantity is 30' ELSE 'The quantity is under 30' END AS QuantityText FROM OrderDetails;
SELECT CustomerName, City, Country FROM Customers ORDER BY (CASE WHEN City IS NULL THEN Country ELSE City END);
SELECT * FROM Customers;
SELECT * FROM Customers WHERE City='Berlin';
SELECT * FROM Customers; SELECT * FROM Products;